# Evergreen Project Config

# When a task that used to pass starts to fail
# Go through all versions that may have been skipped to detect
# when the task started failing
stepback: true

# Mark a failure as a system/bootstrap failure (purple box) rather then a task
# failure by default.
# Actual testing tasks are marked with `type: test`
command_type: system

# Protect ourself against rogue test case, or curl gone wild, that runs forever
# 12 minutes is the longest we'll ever run
exec_timeout_secs: 3600 # 12 minutes is the longest we'll ever run

# What to do when evergreen hits the timeout (`post:` tasks are run automatically)
timeout:
  - command: shell.exec
    params:
      script: |
        ls -la

functions:
  "fetch source":
    - command: git.get_project
      params:
        directory: mongosql-rs

  "check clippy":
    - command: shell.exec
      params:
        shell: bash
        working_dir: mongosql-rs
        script: |
          set -o errexit
          . ~/.cargo/env
          cargo clippy --all-targets -- -D warnings

  "check rustfmt":
    - command: shell.exec
      params:
        shell: bash
        working_dir: mongosql-rs
        script: |
          set -o errexit
          . ~/.cargo/env
          rustfmt +nightly --unstable-features --check $(find . -name '*.rs')

pre:
  - func: "fetch source"

post: []

tasks:

  - name: "clippy"
    commands:
      - func: "check clippy"

  - name: "rustfmt"
    commands:
      - func: "check rustfmt"

buildvariants:
  - name: "static-analysis"
    display_name: "* Static Analysis"
    run_on: [ ubuntu1804-test ]
    tasks:
      - name: "clippy"
      - name: "rustfmt"
